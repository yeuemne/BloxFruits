			 _G.Color = Color3.fromRGB(230,21,112)
			 _G.Logo = 14714307716
			 do  
			 local ui = game.CoreGui:FindFirstChild("UILibrary")
			 if ui then 
			 ui:Destroy() 
			 end 
			 end
			 local UserInputService = game:GetService("UserInputService")
			 local VirtualInputManager = game:GetService("VirtualInputManager")
			 local TweenService = game:GetService("TweenService")
			 local tween = game:service"TweenService"
			 local RunService = game:GetService("RunService")
			 local LocalPlayer = game:GetService("Players").LocalPlayer
			 local Mouse = LocalPlayer:GetMouse()
			 local GuiService = game:GetService("GuiService")
			 local function tablefound(ta, object)
			 for i,v in pairs(ta) do
			 if v == object then
			 return true
			 end
			 end
			 return false
			 end
			 local ActualTypes = {
			 RoundFrame = "ImageLabel",
			 Shadow = "ImageLabel",
			 Circle = "ImageLabel",
			 CircleButton = "ImageButton",
			 Frame = "Frame",
			 Label = "TextLabel",
			 Button = "TextButton",
			 SmoothButton = "ImageButton",
			 Box = "TextBox",
			 ScrollingFrame = "ScrollingFrame",
			 Menu = "ImageButton",
			 NavBar = "ImageButton"}
			 local Properties = {
			 RoundFrame = {
			 BackgroundTransparency = 1,
			 Image = "http://www.roblox.com/asset/?id=5554237731",
			 ScaleType = Enum.ScaleType.Slice,
			 SliceCenter = Rect.new(3,3,297,297)},
			 SmoothButton = {
			 AutoButtonColor = false,
			 BackgroundTransparency = 1,
			 Image = "http://www.roblox.com/asset/?id=5554237731",
			 ScaleType = Enum.ScaleType.Slice,
			 SliceCenter = Rect.new(3,3,297,297)},
			 Shadow = {
			 Name = "Shadow",
			 BackgroundTransparency = 1,
			 Image = "http://www.roblox.com/asset/?id=5554236805",
			 ScaleType = Enum.ScaleType.Slice,
			 SliceCenter = Rect.new(23,23,277,277),
			 Size = UDim2.fromScale(1,1) + UDim2.fromOffset(30,30),
			 Position = UDim2.fromOffset(-15,-15)},
			 Circle = {
			 BackgroundTransparency = 1,
			 Image = "http://www.roblox.com/asset/?id=5554831670"},
			 CircleButton = {
			 BackgroundTransparency = 1,
			 AutoButtonColor = false,
			 mage = "http://www.roblox.com/asset/?id=5554831670"},
			 Frame = {
			 BackgroundTransparency = 1,
			 BorderSizePixel = 0,
			 Size = UDim2.fromScale(1,1)},
			 Label = {
			 BackgroundTransparency = 1,
			 Position = UDim2.fromOffset(5,0),
			 Size = UDim2.fromScale(1,1) - UDim2.fromOffset(5,0),
			 TextSize = 14,
			 TextXAlignment = Enum.TextXAlignment.Left},
			 Button = {
			 BackgroundTransparency = 1,
			 Position = UDim2.fromOffset(5,0),
			 Size = UDim2.fromScale(1,1) - UDim2.fromOffset(5,0),
			 TextSize = 14,
			 TextXAlignment = Enum.TextXAlignment.Left},
			 Box = {
			 BackgroundTransparency = 1,
			 Position = UDim2.fromOffset(5,0),
			 Size = UDim2.fromScale(1,1) - UDim2.fromOffset(5,0),
			 TextSize = 14,
			 TextXAlignment = Enum.TextXAlignment.Left},
			 ScrollingFrame = {
			 BackgroundTransparency = 1,
			 ScrollBarThickness = 0,
			 CanvasSize = UDim2.fromScale(0,0),
			 Size = UDim2.fromScale(1,1)},
			 Menu = {
			 Name = "More",
			 AutoButtonColor = false,
			 BackgroundTransparency = 1,
			 Image = "http://www.roblox.com/asset/?id=5555108481",
			 Size = UDim2.fromOffset(20,20),
			 Position = UDim2.fromScale(1,0.5) - UDim2.fromOffset(25,10)},
			 NavBar = {
			 Name = "SheetToggle",
			 Image = "http://www.roblox.com/asset/?id=5576439039",
			 BackgroundTransparency = 1,
			 Size = UDim2.fromOffset(20,20),
			 Position = UDim2.fromOffset(5,5),
			 AutoButtonColor = false}}
			 local Types = {
			 "RoundFrame",
			 "Shadow",
			 "Circle",
			 "CircleButton",
			 "Frame",
			 "Label",
			 "Button",
			 "SmoothButton",
			 "Box",
			 "ScrollingFrame",
			 "Menu",
			 "NavBar"}
			 function FindType(String)
			 for _, Type in next, Types do
			 if Type:sub(1, #String):lower() == String:lower() then
			 return Type
			 end
			 end
			 return false
			 end
			 local Objects = {}
			 function Objects.new(Type)
			 local TargetType = FindType(Type)
			 if TargetType then
			 local NewImage = Instance.new(ActualTypes[TargetType])
			 if Properties[TargetType] then
			 for Property, Value in next, Properties[TargetType] do
			 NewImage[Property] = Value
			 end
			 end
			 return NewImage
			 else
			 return Instance.new(Type)
			 end
			 end
			 local function GetXY(GuiObject)
			 local Max, May = GuiObject.AbsoluteSize.X, GuiObject.AbsoluteSize.Y
			 local Px, Py = math.clamp(Mouse.X - GuiObject.AbsolutePosition.X, 0, Max), math.clamp(Mouse.Y - GuiObject.AbsolutePosition.Y, 0, May)
			 return Px/Max, Py/May
			 end
			 local function CircleAnim(GuiObject, EndColour, StartColour)
			 local PX, PY = GetXY(GuiObject)
			 local Circle = Objects.new("Shadow")
			 Circle.Size = UDim2.fromScale(0,0)
			 Circle.Position = UDim2.fromScale(PX,PY)
			 Circle.ImageColor3 = StartColour or GuiObject.ImageColor3
			 Circle.ZIndex = 200
			 Circle.Parent = GuiObject
			 local Size = GuiObject.AbsoluteSize.X
			 TweenService:Create(Circle, TweenInfo.new(0.5), {Position = UDim2.fromScale(PX,PY) - UDim2.fromOffset(Size/2,Size/2), ImageTransparency = 1, ImageColor3 = EndColour, Size = UDim2.fromOffset(Size,Size)}):Play()
			 spawn(function()
			 wait(0.5)
			 Circle:Destroy()
			 end)
			 end
			 local function MakeDraggable(topbarobject, object)
			 local Dragging = nil
			 local DragInput = nil
			 local DragStart = nil
			 local StartPosition = nil
			 local function Update(input)
			 local Delta = input.Position - DragStart
			 local pos =
			 UDim2.new(
			 StartPosition.X.Scale,
			 StartPosition.X.Offset + Delta.X,
			 StartPosition.Y.Scale,
			 StartPosition.Y.Offset + Delta.Y)
			 local Tween = TweenService:Create(object, TweenInfo.new(0.2), {Position = pos})
			 Tween:Play()
			 end
			 topbarobject.InputBegan:Connect(
			 function(input)
			 if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			 Dragging = true
			 DragStart = input.Position
			 StartPosition = object.Position
			 input.Changed:Connect(
			 function()
			 if input.UserInputState == Enum.UserInputState.End then
			 Dragging = false
			 end
			 end)
			 end
			 end)
			 topbarobject.InputChanged:Connect(
			 function(input)
			 if input.UserInputType == Enum.UserInputType.MouseMovement or
			 input.UserInputType == Enum.UserInputType.Touch
			 then
			 DragInput = input
		     end
	    	 end)
	         UserInputService.InputChanged:Connect(
		     function(input)
			 if input == DragInput and Dragging then
			 Update(input)
			 end
			 end)
			 end
			 local UIConfig = {Bind = Enum.KeyCode.RightControl}
			 local chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
			 local length = 20
			 local randomString = ""
			 math.randomseed(os.time())
			 charTable = {}
			 for c in chars:gmatch "." do
			 table.insert(charTable, c)
			 end
			 for i = 1, length do
			 randomString = randomString .. charTable[math.random(1, #charTable)]
			 end
			 for i, v in pairs(game.CoreGui:WaitForChild("RobloxGui"):WaitForChild("Modules"):GetChildren()) do
			 if v.ClassName == "ScreenGui" then
			 for i1, v1 in pairs(v:GetChildren()) do
			 if v1.Name == "Main" then
			 do
			 local ui = v
			 if ui then
			 ui:Destroy()
					end
				end
			end
		end
	end
end
function CircleClick(Button, X, Y)
	coroutine.resume(
		coroutine.create(
			function()
				local Circle = Instance.new("ImageLabel")
				Circle.Parent = Button
				Circle.Name = "Circle"
				Circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Circle.BackgroundTransparency = 1.000
				Circle.ZIndex = 10
				Circle.Image = "rbxassetid://266543268"
				Circle.ImageColor3 = Color3.fromRGB(255, 255, 255)
				Circle.ImageTransparency = 0.7
				local NewX = X - Circle.AbsolutePosition.X
				local NewY = Y - Circle.AbsolutePosition.Y
				Circle.Position = UDim2.new(0, NewX, 0, NewY)
				local Time = 0.2
				Circle:TweenSizeAndPosition(
					UDim2.new(0, 30.25, 0, 30.25),
					UDim2.new(0, NewX - 15, 0, NewY - 10),
					"Out",
					"Quad",
					Time,
					false,
					nil
				)
				for i = 1, 10 do
					Circle.ImageTransparency = Circle.ImageTransparency + 0.01
					wait(Time / 10)
				end
				Circle:Destroy()
			end
		)
	)
end
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
function dragify(Frame, object)
	dragToggle = nil
	dragSpeed = .25
	dragInput = nil
	dragStart = nil
	dragPos = nil
	function updateInput(input)
		Delta = input.Position - dragStart
		Position =
			UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
		game:GetService("TweenService"):Create(object, TweenInfo.new(dragSpeed), {Position = Position}):Play()
	end
	Frame.InputBegan:Connect(
		function(input)
			if
				(input.UserInputType == Enum.UserInputType.MouseButton1 or
					input.UserInputType == Enum.UserInputType.Touch)
			then
				dragToggle = true
				dragStart = input.Position
				startPos = object.Position
				input.Changed:Connect(
					function()
						if (input.UserInputState == Enum.UserInputState.End) then
							dragToggle = false
						end
					end
				)
			end
		end
	)
	Frame.InputChanged:Connect(
		function(input)
			if
				(input.UserInputType == Enum.UserInputType.MouseMovement or
					input.UserInputType == Enum.UserInputType.Touch)
			then
				dragInput = input
			end
		end
	)
	game:GetService("UserInputService").InputChanged:Connect(
	function(input)
		if (input == dragInput and dragToggle) then
			updateInput(input)
		end
	end
	)
end
local UI = Instance.new("ScreenGui")
UI.Name = randomString
UI.Parent = game.CoreGui:WaitForChild("RobloxGui"):WaitForChild("Modules")
UI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
upt = {}
function upt:Destroy()
	upt:Destroy()
end
function upt:strt(text,text2,logo)
	local Main = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local Top = Instance.new("Frame")
	local TabHolder = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local TabContainer = Instance.new("ScrollingFrame")
	local UIListLayout = Instance.new("UIListLayout")
	local UIPadding = Instance.new("UIPadding")
	local Logo = Instance.new("ImageLabel")
	local Title = Instance.new("TextLabel")
	local Title2 = Instance.new("TextLabel")
	local Welcome = Instance.new("TextLabel")
	Main.Name = "Main"
	Main.Parent = UI
	Main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Size = UDim2.new(0, 0, 0, 0)
	Main.ClipsDescendants = true
	Main.AnchorPoint = Vector2.new(0.5, 0.5)
	Main:TweenSize(UDim2.new(0,480,0,390),"Out","Quad",0.4,true)	
    local Top2 = Instance.new("Frame")
    Top2.Name = "Top2"
	Top2.Parent = Main
	Top2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	Top2.BackgroundTransparency = 0
	Top2.Position = UDim2.new(0, 0, 0, 0)
	Top2.Size = UDim2.new(0, 585, 0, 45)
    local UICorner_59 = Instance.new("UICorner")
    UICorner_59.CornerRadius = UDim.new(0, 5)
	UICorner_59.Parent = Top2
	Logo.Name = "Logo"
	Logo.Parent = Main
	Logo.Active = true
	Logo.AnchorPoint = Vector2.new(0,0)
	Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Logo.BackgroundTransparency = 1.000
	Logo.Position = UDim2.new(0, 10, 0, 10)
	Logo.Size = UDim2.new(0, 30, 0, 30)
	Logo.ImageTransparency = 0
	Logo.Image = "rbxassetid://"..(logo or 13732317842)
	Title.Name = "Title"
	Title.Parent = Main
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0, 45, 0, 10)
	Title.Size = UDim2.new(0, 483, 0, 31)
	Title.Font = Enum.Font.GothamMedium
	Title.Text = text
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextSize = 17.000
	Title.TextWrapped = true
	Title.TextXAlignment = Enum.TextXAlignment.Left
	Title2.Name = "Title2"
	Title2.Parent = Main
	Title2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title2.BackgroundTransparency = 1.000
	Title2.Position = UDim2.new(0, 95, 0, 10)
	Title2.Size = UDim2.new(0, 483, 0, 31)
	Title2.Font = Enum.Font.GothamMedium
	Title2.Text = text2
	Title2.TextColor3 = _G.Color
	Title2.TextSize = 17.000
	Title2.TextWrapped = true
	Title2.TextXAlignment = Enum.TextXAlignment.Left
	local UiToggle_UiStroke1 = Instance.new("UIStroke")
	UiToggle_UiStroke1.Color = Color3.fromRGB(25,25,25)
	UiToggle_UiStroke1.Thickness = 2
	UiToggle_UiStroke1.Name = "UiToggle_UiStroke1"
	UiToggle_UiStroke1.Parent = Main
	UICorner.CornerRadius = UDim.new(0, 6)
	UICorner.Parent = Main
	Top.Name = "Top"
	Top.Parent = Main
	Top.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Top.BackgroundTransparency = 1
	Top.Position = UDim2.new(0.021956088, 0, 0, 10)
	Top.Size = UDim2.new(0, 565, 0, 39)
	local ClickFrame = Instance.new("Frame")
	ClickFrame.Name = "Top"
	ClickFrame.Parent = Main
	ClickFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ClickFrame.BackgroundTransparency = 1
	ClickFrame.Position = UDim2.new(0, 0, 0, 0)
	ClickFrame.Size = UDim2.new(0, 150, 0, 35)
	TabHolder.Name = "TabHolder"
	TabHolder.Parent = Top
	TabHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabHolder.Position = UDim2.new(0, 120, 0, 0)
	TabHolder.BackgroundTransparency = 1.000
	TabHolder.Size = UDim2.new(0, 450, 0, 38)
	UICorner_2.Parent = TabHolder
	TabContainer.Name = "TabContainer"
	TabContainer.Parent = TabHolder
	TabContainer.Active = true
	TabContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabContainer.BackgroundTransparency = 1.000
	TabContainer.Size = UDim2.new(0, 450, 0, 38)
	TabContainer.CanvasSize = UDim2.new(2, 0, 0, 0)
	TabContainer.ScrollBarThickness = 1
	TabContainer.VerticalScrollBarInset = Enum.ScrollBarInset.Always
	UIListLayout.Parent = TabContainer
	UIListLayout.FillDirection = Enum.FillDirection.Horizontal
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 10)
	UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(
	function()
		TabContainer.CanvasSize = UDim2.new(0, UIListLayout.AbsoluteContentSize.X, 0, 0)
	end)
	UIPadding.Parent = TabContainer
	UIPadding.PaddingLeft = UDim.new(0, 5)
	UIPadding.PaddingTop = UDim.new(0, 5)
	local Bottom = Instance.new("Frame")
	Bottom.Name = "Bottom"
	Bottom.Parent = Main
	Bottom.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Bottom.BackgroundTransparency = 1.000
	Bottom.Position = UDim2.new(0.0119760484, 7, 0, 55)
	Bottom.Size = UDim2.new(0, 500, 0, 320)
	local uitoggled = false
	UserInputService.InputBegan:Connect(
		function(io, p)
			if io.KeyCode == UIConfig.Bind then
				if uitoggled == false then
					Main:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, 0.4, true) wait(0.4) UI.Enabled = false
					uitoggled = true
				else
					UI.Enabled = true
					Main:TweenSize(UDim2.new(0,480,0,390), Enum.EasingDirection.Out, Enum.EasingStyle.Quart,0.4,true)
					uitoggled = false
				end
			end
		end
	)
	dragify(ClickFrame, Main)
	local tbs = {}
	local S = false
	function tbs:Tb(Name,icon)
		local FrameTab = Instance.new("Frame")
		local Tab = Instance.new("TextButton")
		local UICorner_3 = Instance.new("UICorner")
		local UICorner_Tab = Instance.new("UICorner")
		local ImageLabel = Instance.new("ImageLabel")
		local TextLabel = Instance.new("TextLabel")
		icon = 123
		FrameTab.Name = "FrameTab"
		FrameTab.Parent = Tab
		FrameTab.BackgroundColor3 = _G.Color
		FrameTab.BackgroundTransparency = 0
		FrameTab.Position = UDim2.new(0, 0, 0, 22)
		--FrameTab.Size = UDim2.new(0, 80, 0, 2)
		FrameTab.Size = UDim2.new(0, 0, 0, 2)
        FrameTab.Visible = false
		UICorner_Tab.CornerRadius = UDim.new(0, 3)
		UICorner_Tab.Parent = FrameTab
		Tab.Name = "Tab"
		Tab.Parent = TabContainer
		Tab.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
		Tab.Size = UDim2.new(0, 80, 0, 20)
		Tab.BackgroundTransparency = 1.00
		Tab.Text = ""
		UICorner_3.CornerRadius = UDim.new(0, 3)
		UICorner_3.Parent = Tab
		ImageLabel.Parent = Tab
		ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel.Position = UDim2.new(0, 5, 0.2, 0)
		ImageLabel.Size = UDim2.new(0, 20, 0, 30)
		ImageLabel.Image = "http://www.roblox.com/asset/?id=" .. icon
		ImageLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
		ImageLabel.ImageTransparency = 0.2
		ImageLabel.BackgroundTransparency = 1
		TextLabel.Parent = Tab
		TextLabel.Text = Name.." "
		TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.BackgroundTransparency = 1.000
		TextLabel.Position = UDim2.new(0, 0, 0, 0)
		TextLabel.Size = UDim2.new(0, 80, 0, 30)
		TextLabel.Font = Enum.Font.GothamBold
		TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel.TextSize = 12.300
		TextLabel.TextTransparency = 0.200
		if TextLabel.Name == Name.." " then
			Tab.Size = UDim2.new(0, 60 + TextLabel.TextBounds.X, 0, 15)
		end
		local Page = Instance.new("ScrollingFrame")
		local Left = Instance.new("ScrollingFrame")
		local Right = Instance.new("ScrollingFrame")
		local UIListLayout_5 = Instance.new("UIListLayout")
		local UIPadding_5 = Instance.new("UIPadding")
		Page.Name = "Page"
		Page.Parent = Bottom
		Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Page.BackgroundTransparency = 1.000
		Page.Size = UDim2.new(0, 600, 0, 335)
		Page.ScrollBarThickness = 0
		Page.CanvasSize = UDim2.new(0, 0, 0, 0)
		Page.Visible = false
		Left.Name = "Left"
		Left.Parent = Page
		Left.Active = true
		Left.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Left.BackgroundTransparency = 10
		Left.Size = UDim2.new(0, 225, 0, 335)
		Left.ScrollBarThickness = 0
		Left.CanvasSize = UDim2.new(0, 0, 0, 0)
		Right.Name = "Right"
		Right.Parent = Page
		Right.Active = true
		Right.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Right.BackgroundTransparency = 10
		Right.Size = UDim2.new(0, 225, 0, 335)
		Right.ScrollBarThickness = 0
		Right.CanvasSize = UDim2.new(0, 0, 0, 0)
		local LeftList = Instance.new("UIListLayout")
		local RightList = Instance.new("UIListLayout")
		LeftList.Parent = Left
		LeftList.SortOrder = Enum.SortOrder.LayoutOrder
		LeftList.Padding = UDim.new(0, 5)
		RightList.Parent = Right
		RightList.SortOrder = Enum.SortOrder.LayoutOrder
		RightList.Padding = UDim.new(0, 5)
		UIListLayout_5.Parent = Page
		UIListLayout_5.FillDirection = Enum.FillDirection.Horizontal
		UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout_5.Padding = UDim.new(0, 13)
		UIPadding_5.Parent = Page
		if S == false then
			S = true
			Page.Visible = true
			TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel.TextTransparency = 0
			ImageLabel.ImageTransparency = 0
			ImageLabel.ImageColor3 = Color3.fromRGB(255, 255, 255)
			FrameTab.Size = UDim2.new(0, 80, 0, 2)
            FrameTab.Visible = true
		end
		Tab.MouseButton1Click:Connect(
			function()
				for _, x in next, TabContainer:GetChildren() do
					if x.Name == "Tab" then
						TweenService:Create(
							x.TextLabel,
							TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextColor3 = Color3.fromRGB(255, 255, 255)}
						):Play()
						TweenService:Create(
							x.ImageLabel,
							TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{ImageColor3 = Color3.fromRGB(255, 255, 255)}
						):Play()
						TweenService:Create(
							x.ImageLabel,
							TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{ImageTransparency = 0.2}
						):Play()
						TweenService:Create(
							x.TextLabel,
							TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextTransparency = 0.2}
						):Play()
                        TweenService:Create(
							x.FrameTab,
							TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{Size = UDim2.new(0, 0, 0, 2)}
						):Play()
						for index, y in next, Bottom:GetChildren() do
							TweenService:Create(
								y,
								TweenInfo.new(0.2,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
								{Position = UDim2.new(0,1500,0,0)}
							):Play()
							y.Visible = false
						end
                        x.FrameTab.Visible = false
					end
				end
				TweenService:Create(
					TextLabel,
					TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(255, 255, 255)}
				):Play()
				TweenService:Create(
					ImageLabel,
					TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{ImageColor3 = Color3.fromRGB(255, 255, 255)}
				):Play()
				TweenService:Create(
					ImageLabel,
					TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{ImageTransparency = 0}
				):Play()
				TweenService:Create(
					TextLabel,
					TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextTransparency = 0}
				):Play()
                FrameTab.Visible = true
				TweenService:Create(
                    FrameTab,
                    TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                    {Size = UDim2.new(0, 80, 0, 2)}
                ):Play()
				Page.Position = UDim2.new(0,0,0,1500)
				TweenService:Create(
					Page,
					TweenInfo.new(0.2,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
					{Position = UDim2.new(0,0,0,0)}
				):Play()
				Page.Visible = true
			end
		)
		local function GetType(value)
			if value == 1 then
				return Left
			elseif value == 2 then
				return Right
			else
				return Left
			end
		end
		game:GetService("RunService").Stepped:Connect(function()
			pcall(function()
				Right.CanvasSize = UDim2.new(0,0,0,RightList.AbsoluteContentSize.Y + 5)
				Left.CanvasSize = UDim2.new(0,0,0,LeftList.AbsoluteContentSize.Y + 5)
			end)
		end)
		local sts = {}
		function sts:Pg(Name,side)
			if side == nil then
				return Left
			end
			local Section = Instance.new("Frame")
			local UICorner_5 = Instance.new("UICorner")
			local Top_2 = Instance.new("Frame")
			local Line = Instance.new("Frame")
			local Sectionname = Instance.new("TextLabel")
			local SectionContainer = Instance.new("Frame")
			local SectionContainer_2 = Instance.new("Frame")
			local UIListLayout_2 = Instance.new("UIListLayout")
			local UIPadding_2 = Instance.new("UIPadding")
			Section.Name = "Section"
			Section.Parent = GetType(side)
			Section.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
			Section.ClipsDescendants = true
			Section.Transparency = 0
			Section.Size = UDim2.new(0, 240, 0, 400)
			UICorner_5.CornerRadius = UDim.new(0, 5)
			UICorner_5.Parent = Section
			Top_2.Name = "Top"
			Top_2.Parent = Section
			Top_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Top_2.BackgroundTransparency = 1.000
			Top_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Top_2.Size = UDim2.new(0, 238, 0, 31)
			Line.Name = "Line"
			Line.Parent = Top_2
			Line.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
			Line.BorderSizePixel = 0
			Line.Size = UDim2.new(0, 274, 0, 1)
			Sectionname.Name = "Sectionname"
			Sectionname.Parent = Top_2
			Sectionname.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Sectionname.BackgroundTransparency = 1.000
			Sectionname.Position = UDim2.new(0.0591227226, 0, 0.0222222228, 0)
			Sectionname.Size = UDim2.new(0, 224, 0, 24)
			Sectionname.Font = Enum.Font.GothamBold
			Sectionname.Text = Name
			Sectionname.TextColor3 = _G.Color
			Sectionname.TextSize = 14.000
			Sectionname.TextTransparency = 0
			Sectionname.TextXAlignment = Enum.TextXAlignment.Left
			SectionContainer.Name = "SectionContainer"
			SectionContainer.Parent = Top_2
			SectionContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SectionContainer.BackgroundTransparency = 1.000
			SectionContainer.BorderSizePixel = 0
			SectionContainer.Position = UDim2.new(0, 0, 0.796416223, 0)
			SectionContainer.Size = UDim2.new(0, 239, 0, 318)
			SectionContainer_2.Name = "SectionContainer_2"
			SectionContainer_2.Parent = Top_2
			SectionContainer_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SectionContainer_2.BackgroundTransparency = 1.000
			SectionContainer_2.BorderSizePixel = 0
			SectionContainer_2.Position = UDim2.new(0, 0, 0.796416223, 0)
			SectionContainer_2.Size = UDim2.new(0, 239, 0, 318)
			UIListLayout_2.Parent = SectionContainer
			UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
			UIListLayout_2.Padding = UDim.new(0, 10)
			UIPadding_2.Parent = SectionContainer
			UIPadding_2.PaddingLeft = UDim.new(0, 5)
			UIListLayout_2:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(
			function()
				Section.Size = UDim2.new(1, 0, 0, UIListLayout_2.AbsoluteContentSize.Y + 35)
			end
			)
			local funcitms = {}
			function funcitms:Lbl(text)
				local textas = {}
				local Label = Instance.new("Frame")
				local Text = Instance.new("TextLabel")
				Label.Name = "Label"
				Label.Parent = SectionContainer
				Label.AnchorPoint = Vector2.new(0.5, 0.5)
				Label.BackgroundTransparency = 1.000
				Label.Size = UDim2.new(0, 210, 0, 30)
				local Label22 = Instance.new("Frame")
				Label22.Name = "Label22"
				Label22.Parent = Label
				Label22.AnchorPoint = Vector2.new(0, 0.5)
				Label22.BackgroundColor3 = _G.Color
				Label22.Position = UDim2.new(0,0,0.5,0)
				Label22.Size = UDim2.new(0, 35, 0, 2)
				local Label23 = Instance.new("Frame")
				Label23.Name = "Label23"
				Label23.Parent = Label
				Label23.AnchorPoint = Vector2.new(0, 0.5)
				Label23.BackgroundColor3 = _G.Color
				Label23.Position = UDim2.new(0,175,0.5,0)
				Label23.Size = UDim2.new(0, 35, 0, 2)
				Text.Name = "Text"
				Text.Parent = Label
				Text.AnchorPoint = Vector2.new(0.5, 0.5)
				Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Text.BackgroundTransparency = 1.000
				Text.Position = UDim2.new(0.5, 0, 0.5, 0)
				Text.Size = UDim2.new(0, 53, 0, 150)
				Text.ZIndex = 16
				Text.Font = Enum.Font.GothamBold
				Text.Text = text
				Text.TextColor3 = Color3.fromRGB(255, 255, 255)
				Text.TextSize = 10.000
				function textas.Refresh(newtext)
					Text.Text = newtext
				end
				return textas
			end
function funcitms:Pgh(text)
	local textas = {}
	local Label = Instance.new("Frame")
	local Text = Instance.new("TextLabel")

	Label.Name = "Label"
	Label.Parent = SectionContainer
	Label.AnchorPoint = Vector2.new(0.5, 0.5)
	Label.BackgroundTransparency = 1
	Label.Size = UDim2.new(0, 210, 0, 30)

	Text.Name = "Text"
	Text.Parent = Label
	Text.AnchorPoint = Vector2.new(0.5, 0.5)
	Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Text.BackgroundTransparency = 1
	Text.Position = UDim2.new(0.5, 0, 0.5, 0)
	Text.Size = UDim2.new(0, 200, 0, 14) -- tăng size để vừa text
	Text.ZIndex = 16
	Text.Font = Enum.Font.GothamBold
	Text.RichText = true -- ⚠️ Bật RichText
	Text.Text = text
	Text.TextColor3 = Color3.fromRGB(255, 255, 255)
	Text.TextSize = 10

	function textas:Set(newtext)
		Text.Text = tostring(newtext)
	end

	function textas:Color(color)
		Text.TextColor3 = color
	end

	return textas
end
			function funcitms:Btng(Title, default, callback)
				local b3Func = {}
				local callback = callback or function()
				end
				local Tgs = default
				local Button_2 = Instance.new("Frame")
				local UICorner_21 = Instance.new("UICorner")
				local TextLabel_4 = Instance.new("TextLabel")
				local TextButton_4 = Instance.new("TextButton")
				Button_2.Name = "Button"
				Button_2.Parent = SectionContainer
				Button_2.BackgroundColor3 = Color3.fromRGB(33, 132, 112)
				Button_2.Size = UDim2.new(0, 265, 0, 30)
				Button_2.ZIndex = 16
				if default then
					Button_2.BackgroundColor3 = Color3.fromRGB(33, 132, 112)
				else
					Button_2.BackgroundColor3 = _G.Color
				end
				UICorner_21.CornerRadius = UDim.new(0, 4)
				UICorner_21.Parent = Button_2
				TextLabel_4.Parent = Button_2
				TextLabel_4.AnchorPoint = Vector2.new(0.5, 0.5)
				TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				TextLabel_4.BackgroundTransparency = 1.000
				TextLabel_4.Position = UDim2.new(0.5, 0, 0.5, 0)
				TextLabel_4.Size = UDim2.new(0, 40, 0, 12)
				TextLabel_4.ZIndex = 16
				TextLabel_4.Font = Enum.Font.GothamBold
				TextLabel_4.Text = tostring(Title)
				TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
				TextLabel_4.TextSize = 12.000
				TextButton_4.Parent = Button_2
				TextButton_4.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
				TextButton_4.BackgroundTransparency = 1.000
				TextButton_4.BorderSizePixel = 0
				TextButton_4.ClipsDescendants = true
				TextButton_4.Size = UDim2.new(1, 0, 1, 0)
				TextButton_4.ZIndex = 16
				TextButton_4.AutoButtonColor = false
				TextButton_4.Font = Enum.Font.Gotham
				TextButton_4.Text = ""
				TextButton_4.TextColor3 = Color3.fromRGB(255, 255, 255)
				TextButton_4.TextSize = 14.000
				TextButton_4.MouseButton1Click:Connect(
					function()
						Tgs = not Tgs
						b3Func:Update(Tgs)
						CircleClick(Button_2, Mouse.X, Mouse.Y)
					end
				)
				if default then
					TweenService:Create(
						Button_2,
						TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{
							BackgroundColor3 = state and _G.Color or Color3.fromRGB(33, 132, 112)
						}
					):Play()
					callback(default)
					Tgs = default
				end
				function b3Func:Update(state)
					TweenService:Create(
						Button_2,
						TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{
							BackgroundColor3 = state and Color3.fromRGB(33, 132, 112) or _G.Color
						}
					):Play()
					callback(state)
					Tgs = state
				end
				return b3Func
			end
			function funcitms:Btn(Name, callback)
				local Button = Instance.new("Frame")
				local UICorner_6 = Instance.new("UICorner")
				local TextLabel_3 = Instance.new("TextLabel")
				local TextButton = Instance.new("TextButton")
				Button.Name = "Button"
				Button.Parent = SectionContainer
				Button.BackgroundColor3 = _G.Color
				Button.Size = UDim2.new(0, 215, 0, 30)
				Button.ZIndex = 16
				UICorner_6.CornerRadius = UDim.new(0, 4)
				UICorner_6.Parent = Button
				TextLabel_3.Parent = Button
				TextLabel_3.AnchorPoint = Vector2.new(0.5, 0.5)
				TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				TextLabel_3.BackgroundTransparency = 1.000
				TextLabel_3.Position = UDim2.new(0.5, 0, 0.5, 0)
				TextLabel_3.Size = UDim2.new(0, 40, 0, 12)
				TextLabel_3.ZIndex = 13
				TextLabel_3.Font = Enum.Font.GothamBold
				TextLabel_3.Text = Name
				TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
				TextLabel_3.TextSize = 9.000
				TextButton.Parent = Button
				TextButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
				TextButton.BackgroundTransparency = 1.000
				TextButton.BorderSizePixel = 0
				TextButton.ClipsDescendants = true
				TextButton.Size = UDim2.new(1, 0, 1, 0)
				TextButton.ZIndex = 15
				TextButton.AutoButtonColor = false
				TextButton.Font = Enum.Font.Gotham
				TextButton.Text = ""
				TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
				TextButton.TextSize = 9.000
				TextButton.MouseEnter:Connect(function()
					TweenService:Create(
						Button,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{BackgroundTransparency = 0.5}
					):Play()
				end)
				TextButton.MouseLeave:Connect(function()
					TweenService:Create(
						Button,
						TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
				end)
				TextButton.MouseButton1Click:Connect(function()
					CircleClick(Button, Mouse.X, Mouse.Y)
					TextLabel_3.TextSize = 0
					TweenService:Create(
						TextLabel_3,
						TweenInfo.new(0.4,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
						{TextSize = 9}
					):Play()
					callback()
				end)
			end
			function funcitms:Tgl(Name, default, callback)
				local ToglFunc = {}
				local Tgo = default or false 
				local MainToggle = Instance.new("Frame")
				local UICorner = Instance.new("UICorner")
				local Text = Instance.new("TextLabel")
				local MainToggle_2 = Instance.new("ImageLabel")
				local UICorner_2 = Instance.new("UICorner")
				local MainToggle_3 = Instance.new("ImageLabel")
				local UICorner_3 = Instance.new("UICorner")
				local TextButton = Instance.new("TextButton")
				MainToggle.Name = "MainToggle"
				MainToggle.Parent = SectionContainer
				MainToggle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				MainToggle.BackgroundTransparency = 1
				MainToggle.BorderSizePixel = 0
				MainToggle.ClipsDescendants = true
				MainToggle.Size = UDim2.new(0, 257, 0, 45)
				MainToggle.ZIndex = 16
				UICorner.CornerRadius = UDim.new(0, 4)
				UICorner.Parent = MainToggle
				Text.Name = "Text"
				Text.Parent = MainToggle
				Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Text.BackgroundTransparency = 1.000
                Text.Position = UDim2.new(0, 10, 0, 16)
                Text.Size = UDim2.new(1, -40, 0, 12)
				Text.ZIndex = 16
				Text.Font = Enum.Font.GothamBold
				Text.Text = Name
				Text.TextColor3 = Color3.fromRGB(255, 255, 255)
				Text.TextSize = 10.000
				Text.TextTransparency = 0.2
				Text.TextXAlignment = Enum.TextXAlignment.Left
				MainToggle_3.Name = "MainToggle"
				MainToggle_3.Parent = MainToggle
				MainToggle_3.AnchorPoint = Vector2.new(0.5, 0.5)
				MainToggle_3.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
				MainToggle_3.ClipsDescendants = true
				MainToggle_3.Position = UDim2.new(1, -63, 0.5, 0)
				MainToggle_3.Size = UDim2.new(0, 25, 0, 25)
				MainToggle_3.ZIndex = 16
				MainToggle_3.Image = "http://www.roblox.com/asset/?id="
				MainToggle_3.ImageColor3 = Color3.fromRGB(255, 255, 255)
				MainToggle_3.Visible = true
				UICorner_3.CornerRadius = UDim.new(1, 0)
				UICorner_3.Parent = MainToggle_3
				TextButton.Name = ""
				TextButton.Parent = MainToggle
				TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				TextButton.BackgroundTransparency = 1.000
				TextButton.BorderSizePixel = 0
				TextButton.Position = UDim2.new(0, 0, 0, 0)
				TextButton.Size = UDim2.new(0, 265, 0, 35)
				TextButton.ZIndex = 16
				TextButton.AutoButtonColor = false
				TextButton.Font = Enum.Font.Gotham
				TextButton.Text = ""
				TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
				TextButton.TextSize = 9.000
				if default == true then
				MainToggle_3.BackgroundColor3 = Color3.fromRGB(235,31,120)
				MainToggle_3:TweenSize(UDim2.new(0, 25, 0, 25), "In", "Quad", 0.1, true)
				MainToggle_3.Image = "http://www.roblox.com/asset/?id=6023426926"
				UICorner_3.CornerRadius = UDim.new(1, 0)
				pcall(callback, true)
			end
    	TextButton.MouseButton1Click:Connect(function()
	    	if Tgo == false then
			Tgo = true
			MainToggle_3.BackgroundColor3 = Color3.fromRGB(235,31,120)
			MainToggle_3:TweenSize(UDim2.new(0, 25, 0, 25), "In", "Quad", 0.2, true)
			MainToggle_3.Image = "http://www.roblox.com/asset/?id=6023426926"
			UICorner_3.CornerRadius = UDim.new(1, 0)
		else
			Tgo = false
			MainToggle_3.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
			MainToggle_3.Image = "http://www.roblox.com/asset/?id=00"
			MainToggle_3:TweenSize(UDim2.new(0, 25, 0, 25), "In", "Quad", 0.2, true)
			UICorner_3.CornerRadius = UDim.new(1, 0)
		end
		CircleClick(TextButton, Mouse.X, Mouse.Y)
		pcall(callback, Tgo)
		  end)
       	  return ToglFunc
	    end
			function funcitms:Tbx(Name, Placeholder, callback)
				local Textbox = Instance.new("Frame")
				local UICorner_16 = Instance.new("UICorner")
				local Text_5 = Instance.new("TextLabel")
				local TextboxHoler = Instance.new("Frame")
				local UICorner_17 = Instance.new("UICorner")
				local HeadTitle = Instance.new("TextBox")
				Textbox.Name = "Textbox"
				Textbox.Parent = SectionContainer
				Textbox.BackgroundColor3 = Color3.fromRGB(1, 2, 3)
				Textbox.BackgroundTransparency = 0.700
				Textbox.BorderSizePixel = 0
				Textbox.ClipsDescendants = true
				Textbox.Size = UDim2.new(0, 213, 0, 60)
				Textbox.ZIndex = 16
				UICorner_16.CornerRadius = UDim.new(0, 4)
				UICorner_16.Parent = Textbox
				Text_5.Name = "Text"
				Text_5.Parent = Textbox
				Text_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Text_5.BackgroundTransparency = 1.000
				Text_5.Position = UDim2.new(0, 10, 0, 10)
				Text_5.Size = UDim2.new(0, 43, 0, 12)
				Text_5.ZIndex = 16
				Text_5.Font = Enum.Font.GothamBold
				Text_5.Text = Name
				Text_5.TextColor3 = _G.Color
				Text_5.TextSize = 11.000
				Text_5.TextXAlignment = Enum.TextXAlignment.Left
				TextboxHoler.Name = "TextboxHoler"
				TextboxHoler.Parent = Textbox
				TextboxHoler.AnchorPoint = Vector2.new(0.5, 0.5)
				TextboxHoler.BackgroundColor3 = Color3.fromRGB(13, 13, 15)
				TextboxHoler.BackgroundTransparency = 1.000
				TextboxHoler.BorderSizePixel = 0
				TextboxHoler.Position = UDim2.new(0.5, 0, 0.5, 13)
				TextboxHoler.Size = UDim2.new(0.970000029, 0, 0, 30)
				UICorner_17.CornerRadius = UDim.new(0, 8)
				UICorner_17.Parent = TextboxHoler
				HeadTitle.Name = "HeadTitle"
				HeadTitle.Parent = TextboxHoler
				HeadTitle.AnchorPoint = Vector2.new(0.5, 0.5)
				HeadTitle.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
				HeadTitle.BackgroundTransparency = 1.000
				HeadTitle.BorderSizePixel = 0
				HeadTitle.ClipsDescendants = true
				HeadTitle.Position = UDim2.new(0.5, 3, 0.5, 0)
				HeadTitle.Size = UDim2.new(0.949999988, 0, 0, 25)
				HeadTitle.ZIndex = 16
				HeadTitle.Font = Enum.Font.GothamBold
				HeadTitle.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
				HeadTitle.PlaceholderText = Placeholder
				HeadTitle.Text = ""
				HeadTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
				HeadTitle.TextSize = 13.000
				HeadTitle.TextXAlignment = Enum.TextXAlignment.Center
				local ButtonColor44 = Instance.new("UIStroke")				
				ButtonColor44.Thickness = 1.6
				ButtonColor44.Name = ""
				ButtonColor44.Parent = HeadTitle
				ButtonColor44.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
				ButtonColor44.LineJoinMode = Enum.LineJoinMode.Round
				ButtonColor44.Color = _G.Color
				ButtonColor44.Transparency = 0			
				HeadTitle.FocusLost:Connect(
				function(ep)
					if ep then
						if #HeadTitle.Text > 0 then
							callback(HeadTitle.Text)
							HeadTitle.Text = HeadTitle.Text
						end
					end
				end)
			end
           function funcitms:drn(text, list, default, callback)
				local Dropfunc = {}
				local MainDropDown = Instance.new("Frame")
				local UICorner_7 = Instance.new("UICorner")
				local MainDropDown_2 = Instance.new("Frame")
				local UICorner_8 = Instance.new("UICorner")
				local v = Instance.new("TextButton")
				local Text_2 = Instance.new("TextLabel")
				local ImageButton = Instance.new("ImageButton")
				local Scroll_Items = Instance.new("ScrollingFrame")
				local UIListLayout_3 = Instance.new("UIListLayout")
				local UIPadding_3 = Instance.new("UIPadding")
				local MainDropDown_3 = Instance.new("Frame")	
				MainDropDown_3.Name = "MainDropDown"
				MainDropDown_3.Parent = SectionContainer
				MainDropDown_3.BackgroundColor3 = Color3.fromRGB(1, 2, 3)
				MainDropDown_3.Position = UDim2.new(0,0,2,0)
				MainDropDown_3.BackgroundTransparency = 1
				MainDropDown_3.BorderSizePixel = 0
				MainDropDown_3.ClipsDescendants = true
				MainDropDown_3.Size = UDim2.new(0, 213, 0, 15)
				MainDropDown_3.ZIndex = 16
				local Text_3 = Instance.new("TextLabel")
				Text_3.Name = "Text_3"
				Text_3.Parent = MainDropDown_3
				Text_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Text_3.BackgroundTransparency = 1
				Text_3.Size = UDim2.new(0, 62, 0, 12)
				Text_3.ZIndex = 16
				Text_3.Font = Enum.Font.GothamBold
				Text_3.Text = text
				Text_3.TextColor3 = Color3.fromRGB(255, 255, 255)
				Text_3.TextSize = 11
				Text_3.TextXAlignment = Enum.TextXAlignment.Left
				MainDropDown_2.Name = "MainDropDown"
				MainDropDown_2.Parent = MainDropDown
				MainDropDown_2.BackgroundColor3 = Color3.fromRGB(1, 2, 3)
				MainDropDown_2.BackgroundTransparency = 0.7
				MainDropDown_2.BorderSizePixel = 0
				MainDropDown_2.ClipsDescendants = true
				MainDropDown_2.Size = UDim2.new(1, 0, 0, 35)
				MainDropDown_2.ZIndex = 16
				UICorner_8.CornerRadius = UDim.new(0, 4)
				UICorner_8.Parent = MainDropDown_2

				MainDropDown.Name = "MainDropDown"
				MainDropDown.Parent = SectionContainer
				MainDropDown.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
				MainDropDown.BackgroundTransparency = 0.7
				MainDropDown.BorderSizePixel = 0
				MainDropDown.ClipsDescendants = true
				MainDropDown.Size = UDim2.new(0, 213, 0, 35)
				MainDropDown.ZIndex = 16

				UICorner_7.CornerRadius = UDim.new(0, 4)
				UICorner_7.Parent = MainDropDown

				v.Name = "v"
				v.Parent = MainDropDown_2
				v.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				v.BackgroundTransparency = 1
				v.BorderSizePixel = 0
				v.Size = UDim2.new(1, 0, 1, 0)
				v.ZIndex = 16
				v.AutoButtonColor = false
				v.Font = Enum.Font.GothamBold
				v.Text = ""
				v.TextColor3 = Color3.fromRGB(255, 255, 255)
				v.TextSize = 10

				function getpro()
					if default and typeof(default) == "table" and #default > 0 then
						local val = default[1]
						if table.find(list, val) then
							callback(val)
							return val
						end
					end
					return ""
				end

				Text_2.Name = "Text"
				Text_2.Parent = MainDropDown_2
				Text_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Text_2.BackgroundTransparency = 1
				Text_2.Size = UDim2.new(0, 213, 0, 35)
				Text_2.ZIndex = 16
				Text_2.Font = Enum.Font.GothamBold
				local selectedValue = getpro() -- Gọi callback và lấy giá trị mặc định
				Text_2.Text = selectedValue
				Text_2.TextColor3 = Color3.fromRGB(255, 255, 255)
				Text_2.TextSize = 9
				Text_2.TextXAlignment = Enum.TextXAlignment.Center

				local Main_ImageButton = Instance.new("Frame")
				Main_ImageButton.Name = "Main_ImageButton"
				Main_ImageButton.AnchorPoint = Vector2.new(0, 0.5)
				Main_ImageButton.Parent = MainDropDown_2
				Main_ImageButton.BackgroundColor3  = Color3.fromRGB(40, 40, 40)
				Main_ImageButton.Size = UDim2.new(0, 20, 0, 20)
				Main_ImageButton.Position = UDim2.new(1, -25, 0.5, 1)
				Main_ImageButton.ZIndex = 16

				ImageButton.Parent = Main_ImageButton
				ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ImageButton.BackgroundTransparency = 1
				ImageButton.Position = UDim2.new(0, 3, 0, 5)
				ImageButton.Size = UDim2.new(0, 13, 0, 13)
				ImageButton.ZIndex = 16
				ImageButton.Image = "http://www.roblox.com/asset/?id=6282522798"

				local UICorner_35 = Instance.new("UICorner")
				UICorner_35.CornerRadius = UDim.new(0, 5)
				UICorner_35.Parent = Main_ImageButton

				Scroll_Items.Name = "Scroll_Items"
				Scroll_Items.Parent = MainDropDown
				Scroll_Items.Active = true
				Scroll_Items.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Scroll_Items.BackgroundTransparency = 1
				Scroll_Items.BorderSizePixel = 0
				Scroll_Items.Position = UDim2.new(0, 0, 0, 35)
				Scroll_Items.Size = UDim2.new(1, 0, 1, -35)
				Scroll_Items.ZIndex = 16
				Scroll_Items.CanvasSize = UDim2.new(0, 0, 0, 265)
				Scroll_Items.ScrollBarThickness = 0

				UIListLayout_3.Parent = Scroll_Items
				UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout_3.Padding = UDim.new(0, 5)

				UIListLayout_3:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
					Scroll_Items.CanvasSize = UDim2.new(1, 0, 0, UIListLayout_3.AbsoluteContentSize.Y + 40)
				end)

				UIPadding_3.Parent = Scroll_Items
				UIPadding_3.PaddingLeft = UDim.new(0, 10)
				UIPadding_3.PaddingTop = UDim.new(0, 5)

				function Dropfunc:TogglePanel(state)
					TweenService:Create(
						MainDropDown,
						TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size = state and UDim2.new(0, 213, 0, 299) or UDim2.new(0, 213, 0, 35)}
					):Play()
					TweenService:Create(
						ImageButton,
						TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = state and 180 or 0}
					):Play()
				end

				local Tof = false
				ImageButton.MouseButton1Click:Connect(function()
					Tof = not Tof
					Dropfunc:TogglePanel(Tof)
				end)
			
				v.MouseButton1Click:Connect(function()
					Tof = not Tof
					Dropfunc:TogglePanel(Tof)
				end)

				function Dropfunc:Clear()
					for i, v in next, Scroll_Items:GetChildren() do
						if v:IsA("TextButton") then 
							v:Destroy()
						end
					end
				end

				function Dropfunc:Add(Text)
					local _5 = Instance.new("TextButton")
					local UICorner_9 = Instance.new("UICorner")
					_5.Name = Text
					_5.Parent = Scroll_Items
					_5.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
					_5.BorderSizePixel = 0
					_5.ClipsDescendants = true
					_5.Size = UDim2.new(1, -10, 0, 30)
					_5.ZIndex = 17
					_5.AutoButtonColor = false
					_5.Font = Enum.Font.GothamBold
					_5.Text = Text
					_5.TextColor3 = Color3.fromRGB(255, 255, 255)
					_5.TextSize = 11
					UICorner_9.CornerRadius = UDim.new(0, 4)
					UICorner_9.Parent = _5
					_5.MouseButton1Click:Connect(function()
						Tof = false
						Dropfunc:TogglePanel(Tof)
						callback(Text)
						Text_2.Text = Text
			 end)
	    	end
		  	for i, v in next, list do
			Dropfunc:Add(v)
     	end
     	return Dropfunc
		end
			function funcitms:mdrn(Name, list, default, callback)
				local Dropfunc = {}
				local MainDropDown = Instance.new("Frame")
				local UICorner_7 = Instance.new("UICorner")
				local MainDropDown_2 = Instance.new("Frame")
				local UICorner_8 = Instance.new("UICorner")
				local v = Instance.new("TextButton")
				local Text_2 = Instance.new("TextLabel")
				local ImageButton = Instance.new("ImageButton")
				local Scroll_Items = Instance.new("ScrollingFrame")
				local UIListLayout_3 = Instance.new("UIListLayout")
				local UIPadding_3 = Instance.new("UIPadding")
				local MainDropDown_3 = Instance.new("Frame")
				MainDropDown_3.Name = "MainDropDown"
				MainDropDown_3.Parent = SectionContainer
				MainDropDown_3.BackgroundColor3 = Color3.fromRGB(1, 2, 3)
				MainDropDown_3.Position = UDim2.new(0,0,2,0)
				MainDropDown_3.BackgroundTransparency = 1
				MainDropDown_3.BorderSizePixel = 0
				MainDropDown_3.ClipsDescendants = true
				MainDropDown_3.Size = UDim2.new(0, 213, 0, 15)
				MainDropDown_3.ZIndex = 16
				local Text_3 = Instance.new("TextLabel")
				Text_3.Name = "Text_3"
				Text_3.Parent = MainDropDown_3
				Text_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Text_3.BackgroundTransparency = 1.000
				Text_3.Size = UDim2.new(0, 62, 0, 12)
				Text_3.ZIndex = 16
				Text_3.Font = Enum.Font.GothamBold
				Text_3.Text = Name
				Text_3.TextColor3 = Color3.fromRGB(255, 255, 255)
				Text_3.TextSize = 11.000
				Text_3.TextXAlignment = Enum.TextXAlignment.Left
				MainDropDown_2.Name = "MainDropDown"
				MainDropDown_2.Parent = MainDropDown
				MainDropDown_2.BackgroundColor3 = Color3.fromRGB(1, 2, 3)
				MainDropDown_2.BackgroundTransparency = 0.700
				MainDropDown_2.BorderSizePixel = 0
				MainDropDown_2.ClipsDescendants = true
				MainDropDown_2.Size = UDim2.new(1, 0, 0, 35)
				MainDropDown_2.ZIndex = 16
				UICorner_8.CornerRadius = UDim.new(0, 4)
				UICorner_8.Parent = MainDropDown_2
				MainDropDown.Name = "MainDropDown"
				MainDropDown.Parent = SectionContainer
				MainDropDown.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
				MainDropDown.BackgroundTransparency = 0.700
				MainDropDown.BorderSizePixel = 0
				MainDropDown.ClipsDescendants = true
				MainDropDown.Size = UDim2.new(0, 213, 0, 35)
				MainDropDown.ZIndex = 16
				UICorner_7.CornerRadius = UDim.new(0, 4)
				UICorner_7.Parent = MainDropDown
				v.Name = "v"
				v.Parent = MainDropDown_2
				v.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				v.BackgroundTransparency = 1.000
				v.BorderSizePixel = 0
				v.Size = UDim2.new(1, 0, 1, 0)
				v.ZIndex = 16
				v.AutoButtonColor = false
				v.Font = Enum.Font.GothamBold
				v.Text = ""
				v.TextColor3 = Color3.fromRGB(255, 255, 255)
				v.TextSize = 10.000
				function getpro()
					if default then
						for i, v in next, default do
							if table.find(list, v) then
								callback(default)
								return table.concat(default, ", ")
							else
								return ""
							end
						end
					else
						return ""
					end
				end
				Text_2.Name = "Text"
				Text_2.Parent = MainDropDown_2
				Text_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Text_2.BackgroundTransparency = 1.000
				Text_2.Size = UDim2.new(0, 213, 0, 35)
				Text_2.ZIndex = 16
				Text_2.Font = Enum.Font.GothamBold
				Text_2.Text = getpro()
				Text_2.TextColor3 = Color3.fromRGB(255, 255, 255)
				Text_2.TextSize = 9.000
				Text_2.TextXAlignment = Enum.TextXAlignment.Center
				ImageButton.Parent = MainDropDown_2
				ImageButton.AnchorPoint = Vector2.new(0, 0.5)
				ImageButton.BackgroundTransparency = 1.000
				ImageButton.Position = UDim2.new(1, -25, 0.5, 0)
				ImageButton.Size = UDim2.new(0, 12, 0, 12)
				ImageButton.ZIndex = 16
				ImageButton.Image = "http://www.roblox.com/asset/?id=6282522798"
				local DropTable = {}
				Scroll_Items.Name = "Scroll_Items"
				Scroll_Items.Parent = MainDropDown
				Scroll_Items.Active = true
				Scroll_Items.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Scroll_Items.BackgroundTransparency = 1.000
				Scroll_Items.BorderSizePixel = 0
				Scroll_Items.Position = UDim2.new(0, 0, 0, 35)
				Scroll_Items.Size = UDim2.new(1, 0, 1, -35)
				Scroll_Items.ZIndex = 16
				Scroll_Items.CanvasSize = UDim2.new(0, 0, 0, 265)
				Scroll_Items.ScrollBarThickness = 0
				UIListLayout_3.Parent = Scroll_Items
				UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout_3.Padding = UDim.new(0, 5)
				UIListLayout_2:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(
				function()
					Scroll_Items.CanvasSize = UDim2.new(1, 0, 0, UIListLayout_2.AbsoluteContentSize.Y+40)
				end
				)
				UIPadding_3.Parent = Scroll_Items
				UIPadding_3.PaddingLeft = UDim.new(0, 10)
				UIPadding_3.PaddingTop = UDim.new(0, 5)
				function Dropfunc:TogglePanel(state)
					TweenService:Create(
						MainDropDown,
						TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Size = state and UDim2.new(0, 213, 0, 200) or UDim2.new(0, 213, 0, 35)}
					):Play()
					TweenService:Create(
						ImageButton,
						TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{Rotation = state and 180 or 0}
					):Play()
				end
				local Tof = false
				ImageButton.MouseButton1Click:Connect(
					function()
						Tof = not Tof
						Dropfunc:TogglePanel(Tof)
					end
				)
				v.MouseButton1Click:Connect(
					function()
						Tof = not Tof
						Dropfunc:TogglePanel(Tof)
					end
				)
				function Dropfunc:Add(Text)
					local _5 = Instance.new("TextButton")
					local UICorner_9 = Instance.new("UICorner")
					_5.Name = Text
					_5.Parent = Scroll_Items
					_5.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
					_5.BorderSizePixel = 0
					_5.ClipsDescendants = true
					_5.Size = UDim2.new(1, -10, 0, 30)
					_5.ZIndex = 17
					_5.AutoButtonColor = false
					_5.Font = Enum.Font.GothamBold
					_5.Text = Text
					_5.TextColor3 = Color3.fromRGB(255, 255, 255)
					_5.TextSize = 12.000
					UICorner_9.CornerRadius = UDim.new(0, 4)
					UICorner_9.Parent = _5
					_5.MouseButton1Click:Connect(
						function()
							if not table.find(DropTable, Text) then
								table.insert(DropTable, Text)
								callback(DropTable, Text)
								Text_2.Text = table.concat(DropTable, ", ")
								TweenService:Create(
									_5,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextColor3 = _G.Color}
								):Play()
							else
								TweenService:Create(
									_5,
									TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
									{TextColor3 = Color3.fromRGB(255, 255, 255)}
								):Play()
								for i2, v2 in pairs(DropTable) do
									if v2 == Text then
										table.remove(DropTable, i2)
										Text_2.Text = table.concat(DropTable, ", ")
									end
								end
								callback(DropTable, Text)
							end
						end
					)
				end
				function Dropfunc:Clear()
					for i, v in next, Scroll_Items:GetChildren() do
						if v:IsA("TextButton")  then 
							v:Destroy()

						end
					end 
				end
				for i, v in next, list do
					Dropfunc:Add(v)
				end
				return Dropfunc
			end
          function funcitms:Sdr(text, floor, min, max, de, callback)
				local UserInputService = game:GetService("UserInputService")
				local TweenService = game:GetService("TweenService")
				local SliderFrame = Instance.new("Frame")
				local LabelNameSlider = Instance.new("TextLabel")
				local ShowValueFrame = Instance.new("Frame")
				local CustomValue = Instance.new("TextBox")
				local ShowValueFrameUICorner = Instance.new("UICorner")
				local ValueFrame = Instance.new("Frame")
				local ValueFrameUICorner = Instance.new("UICorner")
				local PartValue = Instance.new("Frame")
				local PartValueUICorner = Instance.new("UICorner")
				local MainValue = Instance.new("Frame")
				local MainValueUICorner = Instance.new("UICorner")
				local sliderfunc = {}
				SliderFrame.Name = "SliderFrame"
				SliderFrame.Parent = SectionContainer
				SliderFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
				SliderFrame.Size = UDim2.new(0, 213, 0, 45)
				local UICorner_7 = Instance.new("UICorner")
				UICorner_7.CornerRadius = UDim.new(0, 4)
				UICorner_7.Parent = SliderFrame
				LabelNameSlider.Parent = SliderFrame
				LabelNameSlider.BackgroundTransparency = 1
				LabelNameSlider.Position = UDim2.new(0.072, 0, 0.04, 0)
				LabelNameSlider.Size = UDim2.new(0, 182, 0, 25)
				LabelNameSlider.Font = Enum.Font.GothamBold
				LabelNameSlider.Text = tostring(text)
				LabelNameSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
				LabelNameSlider.TextSize = 11
				LabelNameSlider.TextXAlignment = Enum.TextXAlignment.Left
				ShowValueFrame.Parent = SliderFrame
				ShowValueFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				ShowValueFrame.Position = UDim2.new(0.733, 0, 0.065, 0)
				ShowValueFrame.Size = UDim2.new(0, 58, 0, 21)
				CustomValue.Parent = ShowValueFrame
				CustomValue.AnchorPoint = Vector2.new(0.5, 0.5)
				CustomValue.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
				CustomValue.Position = UDim2.new(0.5, 0, 0.5, 0)
				CustomValue.Size = UDim2.new(0, 55, 0, 21)
				CustomValue.Font = Enum.Font.GothamBold
				CustomValue.Text = "50"
				CustomValue.TextColor3 = Color3.fromRGB(255, 255, 255)
				CustomValue.TextSize = 11
				ShowValueFrameUICorner.CornerRadius = UDim.new(0, 4)
				ShowValueFrameUICorner.Parent = ShowValueFrame
				ValueFrame.Parent = SliderFrame
				ValueFrame.AnchorPoint = Vector2.new(0.5, 0.5)
				ValueFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
				ValueFrame.Position = UDim2.new(0.5, 0, 0.8, 0)
				ValueFrame.Size = UDim2.new(0, 200, 0, 5)
				ValueFrameUICorner.CornerRadius = UDim.new(0, 30)
				ValueFrameUICorner.Parent = ValueFrame
				PartValue.Parent = ValueFrame
				PartValue.AnchorPoint = Vector2.new(0.5, 0.5)
				PartValue.BackgroundTransparency = 1
				PartValue.Position = UDim2.new(0.5, 0, 0.8, 0)
				PartValue.Size = UDim2.new(0, 200, 0, 5)
				PartValueUICorner.CornerRadius = UDim.new(0, 30)
				PartValueUICorner.Parent = PartValue
				MainValue.Parent = ValueFrame
				MainValue.BackgroundColor3 = _G.Color or Color3.fromRGB(0, 170, 255)
				MainValue.Size = UDim2.new((de or 0) / max, 0, 0, 5)
				MainValue.BorderSizePixel = 0
				MainValueUICorner.CornerRadius = UDim.new(0, 30)
				MainValueUICorner.Parent = MainValue
				local ConneValue = Instance.new("Frame")
				ConneValue.Name = "ConneValue"
				ConneValue.Parent = PartValue
				ConneValue.AnchorPoint = Vector2.new(0.7, 0.7)
				ConneValue.BackgroundColor3 = _G.Color or Color3.fromRGB(0, 170, 255)
				ConneValue.Position = UDim2.new((de or 0)/max, 0.5, 0.5, 0, 0)
				ConneValue.Size = UDim2.new(0, 10, 0, 10)
				ConneValue.BorderSizePixel = 0
				local UICorner = Instance.new("UICorner")
				UICorner.CornerRadius = UDim.new(0, 10)
				UICorner.Parent = ConneValue
			if floor == true then
				CustomValue.Text = tostring(de and string.format("%.0f", ((de / max) * (max - min) + min)) or 0)
         	else
				CustomValue.Text = tostring(de and math.floor((de / max) * (max - min) + min) or 0)
         	end
			local function tweenScale(instance, size, time)
    		local tween = TweenService:Create(instance, TweenInfo.new(time, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {
			Size = size
    		})
     		tween:Play()
    	end
    	local function move(input)
				local mousePos = UserInputService:GetMouseLocation()
				local scale = math.clamp((mousePos.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1)
				local pos = UDim2.new(scale, 0, 0.5, 0)
				local size = UDim2.new(scale, 0, 0, 5)
				MainValue:TweenSize(size, "Out", "Sine", 0.2, true)
				ConneValue:TweenPosition(pos, "Out", "Sine", 0.2, true)
				local rawValue = scale * (max - min) + min
				local finalValue = floor and string.format("%.0f", rawValue) or math.floor(rawValue)
				CustomValue.Text = tostring(finalValue)
 				pcall(callback, finalValue)
        	end
            	local dragging = false
             	local function onInputBegan(input)
	        	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			move(input)
			tweenScale(ConneValue, UDim2.new(0, 19, 0, 19), 0.1)
		end
	end
	local function onInputEnded(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
			tweenScale(ConneValue, UDim2.new(0, 10, 0, 10), 0.1)
		end
	end
	ConneValue.InputBegan:Connect(onInputBegan)
	ConneValue.InputEnded:Connect(onInputEnded)
	ValueFrame.InputBegan:Connect(onInputBegan)
	ValueFrame.InputEnded:Connect(onInputEnded)
	UserInputService.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			move(input)
		end
	end)
	CustomValue.FocusLost:Connect(function()
		local textValue = tonumber(CustomValue.Text)
		if not textValue then
			CustomValue.Text = de
			return
		end
		if textValue > max then textValue = max end
		if textValue < min then textValue = min end
		local scale = (textValue - min) / (max - min)
		MainValue:TweenSize(UDim2.new(scale, 0, 0, 5), "Out", "Sine", 0.2, true)
		ConneValue:TweenPosition(UDim2.new(scale, 0, 0.5, 0), "Out", "Sine", 0.2, true)
		local formatted = floor and string.format("%.0f", textValue) or math.floor(textValue)
		CustomValue.Text = tostring(formatted)
		pcall(callback, formatted)
	end)
	function sliderfunc:Update(value)
		local scale = (value - min) / (max - min)
		MainValue:TweenSize(UDim2.new(scale, 0, 0, 5), "Out", "Sine", 0.2, true)
		ConneValue:TweenPosition(UDim2.new(scale, 0, 0.5, 0), "Out", "Sine", 0.2, true)
		CustomValue.Text = tostring(value)
		pcall(callback, value)
	end

	return sliderfunc
end
return funcitms
		end
		return sts
	end
	return tbs
end
return upt;